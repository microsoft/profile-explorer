<local:OptionsPanelBase
    x:Class="IRExplorerUI.OptionsPanels.DocumentProfilingOptionsPanel"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:IRExplorerUI.OptionsPanels"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    d:DesignHeight="450"
    d:DesignWidth="350"
    mc:Ignorable="d">
    <Grid Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}">
        <StackPanel Margin="4,4,4,4">
            <CheckBox
                Margin="0,2,0,2"
                Content="Mark lines based on duration"
                IsChecked="{Binding MarkElements, Mode=TwoWay}" />
            <CheckBox
                x:Name="MarkBlocksCheckbox"
                Margin="0,2,0,2"
                Content="Mark blocks based on duration"
                IsChecked="{Binding MarkBlocks, Mode=TwoWay}"
                Visibility="{Binding ShowsDocumentSettings, Converter={StaticResource BoolToVisibilityConverter}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:DocumentProfilingOptionsPanel}}" />
            <CheckBox
                Margin="20,2,0,2"
                Content="Also mark blocks in Flow Graph panel"
                IsChecked="{Binding MarkBlocksInFlowGraph, Mode=TwoWay}"
                IsEnabled="{Binding ElementName=MarkBlocksCheckbox, Path=IsChecked}"
                Visibility="{Binding ShowsDocumentSettings, Converter={StaticResource BoolToVisibilityConverter}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:DocumentProfilingOptionsPanel}}" />
            <CheckBox
                Margin="0,2,0,2"
                Content="Display called function list for calls"
                IsChecked="{Binding MarkCallTargets, Mode=TwoWay}" />
            <CheckBox
                Margin="0,2,0,2"
                Content="Jump to the hottest function line"
                IsChecked="{Binding JumpToHottestElement, Mode=TwoWay}"
                IsEnabled="False" />
            <Separator Margin="0,4,0,4" />

            <TextBlock FontWeight="Medium" Text="Columns" />
            <CheckBox
                Margin="0,4,0,2"
                Content="Show performance counter columns"
                IsChecked="{Binding ShowPerformanceCounterColumns, Mode=TwoWay}"
                ToolTip="Show the CPU performance counter columns" />
            <CheckBox
                Margin="0,2,0,2"
                Content="Show performance metrics columns"
                IsChecked="{Binding ShowPerformanceMetricColumns, Mode=TwoWay}"
                ToolTip="Show the CPU performance metric columns" />
            <CheckBox
                Margin="0,2,0,2"
                Content="Hide empty columns"
                IsChecked="{Binding RemoveEmptyColumns, Mode=TwoWay}"
                ToolTip="Compute function IR statistics on document load and show extra columns" />
            <CheckBox
                Margin="0,2,0,2"
                Content="Show icons for hottest lines"
                IsChecked="{Binding DisplayIcons, Mode=TwoWay}"
                ToolTip="Compute function IR statistics on document load and show extra columns" />
            <CheckBox
                x:Name="PercentageBarCheckBox"
                Margin="0,2,0,2"
                Content="Show percentage bars"
                IsChecked="{Binding DisplayPercentageBar, Mode=TwoWay}"
                ToolTip="Compute function IR statistics on document load and show extra columns" />
            <StackPanel
                Margin="20,0,0,2"
                IsEnabled="{Binding ElementName=PercentageBarCheckBox, Path=IsChecked}"
                Orientation="Horizontal">
                <TextBlock
                    VerticalAlignment="Center"
                    Text="Max width (px)"
                    ToolTip="Maximum width of the percentage bar in the column" />
                <xctk:IntegerUpDown
                    Width="64"
                    Margin="8,0,0,0"
                    Increment="1"
                    Maximum="100"
                    Minimum="10"
                    ParsingNumberStyle="Integer"
                    ShowButtonSpinner="True"
                    ToolTip="Only show lines with a weight greater than this value"
                    Value="{Binding Path=MaxPercentageBarWidth, Mode=TwoWay}" />
                <Button
                    Height="20"
                    Margin="8,0,0,0"
                    Padding="2,0,2,0"
                    VerticalAlignment="Center"
                    Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                    Click="MaxWidthButton_Click"
                    Content="Default"
                    ToolTip="Reset value to default weight cutoff" />
            </StackPanel>

            <StackPanel Margin="0,2,0,0" Orientation="Horizontal">
                <TextBlock
                    VerticalAlignment="Center"
                    Text="Weight cutoff (%)"
                    ToolTip="Only show lines with a weight greater than this value" />
                <xctk:DoubleUpDown
                    Width="65"
                    Margin="14,0,0,0"
                    Increment="1"
                    Maximum="100"
                    Minimum="0"
                    ParsingNumberStyle="AllowThousands"
                    ShowButtonSpinner="True"
                    ToolTip="Only show lines with a weight greater than this value"
                    Value="{Binding Path=ElementWeightCutoff, Mode=TwoWay}" />
                <Button
                    Height="20"
                    Margin="8,0,0,0"
                    Padding="2,0,2,0"
                    VerticalAlignment="Center"
                    Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                    Click="WeightCutoffButton_Click"
                    Content="Default"
                    ToolTip="Reset value to default weight cutoff" />
            </StackPanel>
            <StackPanel Margin="0,2,0,2" Orientation="Horizontal">
                <TextBlock
                    Width="50"
                    VerticalAlignment="Center"
                    Text="Time unit" />
                <ComboBox
                    Width="112"
                    Margin="8,0,0,0"
                    VerticalAlignment="Center"
                    IsEnabled="False"
                    IsSynchronizedWithCurrentItem="True">
                    <ComboBoxItem Content="Nanosecond" />
                    <ComboBoxItem Content="Millisecond" />
                    <ComboBoxItem Content="Second" />
                </ComboBox>
            </StackPanel>
            <Separator Margin="0,4,0,4" />

            <TextBlock FontWeight="Medium" Text="Colors" />
            <Grid Margin="0,4,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="70" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <xctk:ColorPicker
                    Grid.Column="0"
                    Width="64"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    AvailableColorsSortingMode="HueSaturationBrightness"
                    BorderBrush="Gray"
                    SelectedColor="{Binding ColumnTextColor, Mode=TwoWay}"
                    ShowDropDownButton="True"
                    UsingAlphaChannel="False" />
                <TextBlock
                    Grid.Column="1"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Text="Column text color" />
            </Grid>
            <Grid Margin="0,2,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="70" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <xctk:ColorPicker
                    Grid.Column="0"
                    Width="64"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    AvailableColorsSortingMode="HueSaturationBrightness"
                    BorderBrush="Gray"
                    SelectedColor="{Binding PercentageBarBackColor, Mode=TwoWay}"
                    ShowDropDownButton="True"
                    UsingAlphaChannel="False" />
                <TextBlock
                    Grid.Column="1"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Text="Percentage bar color" />
            </Grid>
            <Grid
                Margin="0,2,0,0"
                IsEnabled="{Binding ElementName=MarkBlocksCheckbox, Path=IsChecked}"
                Visibility="{Binding ShowsDocumentSettings, Converter={StaticResource BoolToVisibilityConverter}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:DocumentProfilingOptionsPanel}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="70" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <xctk:ColorPicker
                    Grid.Column="0"
                    Width="64"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    AvailableColorsSortingMode="HueSaturationBrightness"
                    BorderBrush="Gray"
                    SelectedColor="{Binding BlockOverlayTextColor, Mode=TwoWay}"
                    ShowDropDownButton="True"
                    UsingAlphaChannel="False" />
                <TextBlock
                    Grid.Column="1"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Text="Marked block text color" />
            </Grid>
            <Grid
                Margin="0,2,0,0"
                IsEnabled="{Binding ElementName=MarkBlocksCheckbox, Path=IsChecked}"
                Visibility="{Binding ShowsDocumentSettings, Converter={StaticResource BoolToVisibilityConverter}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:DocumentProfilingOptionsPanel}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="70" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <xctk:ColorPicker
                    Grid.Column="0"
                    Width="64"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    AvailableColorsSortingMode="HueSaturationBrightness"
                    BorderBrush="Gray"
                    SelectedColor="{Binding HotBlockOverlayTextColor, Mode=TwoWay}"
                    ShowDropDownButton="True"
                    UsingAlphaChannel="False" />
                <TextBlock
                    Grid.Column="1"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Text="Marked hot block text color" />
            </Grid>
            <Grid
                Margin="0,2,0,0"
                IsEnabled="{Binding ElementName=MarkBlocksCheckbox, Path=IsChecked}"
                Visibility="{Binding ShowsDocumentSettings, Converter={StaticResource BoolToVisibilityConverter}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:DocumentProfilingOptionsPanel}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="70" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <xctk:ColorPicker
                    Grid.Column="0"
                    Width="64"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    AvailableColorsSortingMode="HueSaturationBrightness"
                    BorderBrush="Gray"
                    SelectedColor="{Binding BlockOverlayBorderColor, Mode=TwoWay}"
                    ShowDropDownButton="True"
                    UsingAlphaChannel="False" />
                <TextBlock
                    Grid.Column="1"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Text="Marked block border color" />
            </Grid>
        </StackPanel>
    </Grid>
</local:OptionsPanelBase>