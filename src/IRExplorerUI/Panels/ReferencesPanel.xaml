<local:ToolPanelControl
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d"
    x:Class="IRExplorerUI.ReferencesPanel"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:IRExplorerUI"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="28" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid
            Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"
            Grid.Row="0"
            HorizontalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="75" />
            </Grid.ColumnDefinitions>
            <ToolBarTray
                Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"
                Grid.Column="0"
                Height="28"
                HorizontalAlignment="Stretch"
                IsLocked="True">
                <ToolBar
                    Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"
                    HorizontalAlignment="Stretch"
                    Loaded="ToolBar_Loaded"
                    VerticalAlignment="Top">

                    <TextBlock
                        HorizontalAlignment="Center"
                        Margin="5,0,0,0"
                        Text="Show"
                        VerticalAlignment="Center" />
                    <ToggleButton
                        BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"
                        HorizontalContentAlignment="Stretch"
                        IsChecked="{Binding ShowLoad, Mode=TwoWay}"
                        Margin="8,0,0,0"
                        MinWidth="75"
                        Padding="4,2,4,2">
                        <ToggleButton.Content>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Loads" />
                                <TextBlock
                                    FontWeight="Medium"
                                    Margin="8,0,0,0"
                                    Text="{Binding LoadCount}" />
                            </StackPanel>
                        </ToggleButton.Content>
                    </ToggleButton>
                    <ToggleButton
                        BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"
                        HorizontalContentAlignment="Stretch"
                        IsChecked="{Binding ShowStore, Mode=TwoWay}"
                        Margin="-1,0,0,0"
                        MinWidth="75"
                        Padding="4,2,4,2">
                        <ToggleButton.Content>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Stores" />
                                <TextBlock
                                    FontWeight="Medium"
                                    Margin="8,0,0,0"
                                    Text="{Binding StoreCount}" />
                            </StackPanel>
                        </ToggleButton.Content>
                    </ToggleButton>
                    <ToggleButton
                        BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"
                        HorizontalContentAlignment="Stretch"
                        IsChecked="{Binding ShowAddress, Mode=TwoWay}"
                        Margin="-1,0,0,0"
                        MinWidth="75"
                        Padding="4,2,4,2">
                        <ToggleButton.Content>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Address" />
                                <TextBlock
                                    FontWeight="Medium"
                                    Margin="8,0,0,0"
                                    Text="{Binding AddressCount}" />
                            </StackPanel>
                        </ToggleButton.Content>
                    </ToggleButton>
                    <ToggleButton
                        BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"
                        HorizontalContentAlignment="Stretch"
                        IsChecked="{Binding ShowSSA, Mode=TwoWay}"
                        Margin="-1,0,0,0"
                        MinWidth="75"
                        Padding="4,2,4,2">
                        <ToggleButton.Content>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="SSA uses" />
                                <TextBlock
                                    FontWeight="Medium"
                                    Margin="8,0,0,0"
                                    Text="{Binding SSACount}" />
                            </StackPanel>
                        </ToggleButton.Content>
                    </ToggleButton>

                    <Button
                        Command="local:ReferenceCommand.CopyToClipboard"
                        CommandTarget="{Binding ElementName=ReferenceList}"
                        ToolTip="Copy reference list to clipboard (Ctrl+C)">
                        <Image Source="{StaticResource ClipboardIcon}" />
                    </Button>

                    <Separator />
                    <TextBlock
                        Margin="4,0,0,0"
                        Text="Symbol"
                        VerticalAlignment="Center" />
                    <TextBlock
                        FontWeight="Medium"
                        Margin="8,0,0,0"
                        MinWidth="100"
                        Text=""
                        VerticalAlignment="Center"
                        x:Name="SymbolName" />
                </ToolBar>
            </ToolBarTray>

            <local:PanelToolbarTray
                BindMenuItemSelected="FixedToolbar_BindMenuItemSelected"
                BindMenuOpen="FixedToolbar_BindMenuOpen"
                DuplicateClicked="PanelToolbarTray_DuplicateClicked"
                Grid.Column="1"
                PinnedChanged="PanelToolbarTray_PinnedChanged"
                SettingsClicked="PanelToolbarTray_SettingsClicked"
                x:Name="FixedToolbar" />
        </Grid>

        <ListView
            Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"
            BorderBrush="{x:Null}"
            BorderThickness="0,0,0,0"
            Grid.RowSpan="2"
            Margin="0,27,0,0"
            VirtualizingPanel.IsVirtualizing="True"
            VirtualizingPanel.VirtualizationMode="Recycling"
            x:Name="ReferenceList">
            <ListView.View>
                <GridView>
                    <GridViewColumn
                        DisplayMemberBinding="{Binding Index}"
                        Header="#"
                        Width="30">
                        <GridViewColumn.HeaderContainerStyle>
                            <Style TargetType="{x:Type GridViewColumnHeader}">
                                <Setter Property="HorizontalContentAlignment" Value="Left" />
                            </Style>
                        </GridViewColumn.HeaderContainerStyle>
                    </GridViewColumn>
                    <GridViewColumn
                        DisplayMemberBinding="{Binding Kind}"
                        Header="Kind"
                        Width="60">
                        <GridViewColumn.HeaderContainerStyle>
                            <Style TargetType="{x:Type GridViewColumnHeader}">
                                <Setter Property="HorizontalContentAlignment" Value="Left" />
                            </Style>
                        </GridViewColumn.HeaderContainerStyle>
                    </GridViewColumn>

                    <GridViewColumn
                        DisplayMemberBinding="{Binding Block}"
                        Header="Block"
                        Width="100">
                        <GridViewColumn.HeaderContainerStyle>
                            <Style TargetType="{x:Type GridViewColumnHeader}">
                                <Setter Property="HorizontalContentAlignment" Value="Left" />
                            </Style>
                        </GridViewColumn.HeaderContainerStyle>
                    </GridViewColumn>

                    <GridViewColumn Header="Preview" Width="400">
                        <GridViewColumn.HeaderContainerStyle>
                            <Style TargetType="{x:Type GridViewColumnHeader}">
                                <Setter Property="HorizontalContentAlignment" Value="Left" />
                            </Style>
                        </GridViewColumn.HeaderContainerStyle>

                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <ContentPresenter Content="{Binding Preview}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn
                        DisplayMemberBinding="{Binding Line}"
                        Header="Line"
                        Width="70">
                        <GridViewColumn.HeaderContainerStyle>
                            <Style TargetType="{x:Type GridViewColumnHeader}">
                                <Setter Property="HorizontalContentAlignment" Value="Left" />
                            </Style>
                        </GridViewColumn.HeaderContainerStyle>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
            <ListView.ItemContainerStyle>
                <Style BasedOn="{StaticResource FlatListViewItem}" TargetType="{x:Type ListViewItem}">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                    <EventSetter Event="MouseDoubleClick" Handler="ListViewItem_MouseDoubleClick" />

                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Kind}" Value="Store">
                            <Setter Property="Foreground" Value="#006700" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Kind}" Value="Load">
                            <Setter Property="Foreground" Value="#4E0088" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Kind}" Value="Address">
                            <Setter Property="FontWeight" Value="Medium" />
                            <Setter Property="Foreground" Value="#BE0000" />
                        </DataTrigger>
                    </Style.Triggers>

                </Style>
            </ListView.ItemContainerStyle>
            <ListView.ContextMenu>
                <ContextMenu>
                    <MenuItem
                        Command="local:ReferenceCommand.JumpToReference"
                        CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}"
                        Header="Jump to Reference"
                        InputGestureText="Return">
                        <MenuItem.Icon>
                            <Image
                                Height="16"
                                Source="{StaticResource JumpIcon}"
                                Width="16" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator />

                    <MenuItem
                        Focusable="False"
                        Header="Mark Reference"
                        IsHitTestVisible="False" />
                    <MenuItem>
                        <MenuItem.Header>
                            <local:ColorSelector ColorSelectedCommand="local:ReferenceCommand.MarkReference" />
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem Command="local:ReferenceCommand.UnmarkReference" Header="Clear Marker" />
                    <Separator />

                    <MenuItem Header="Mark Symbol Referencess">
                        <MenuItem>
                            <MenuItem.Header>
                                <local:ColorSelector ColorSelectedCommand="local:ReferenceCommand.MarkReference" />
                            </MenuItem.Header>
                        </MenuItem>
                    </MenuItem>

                    <MenuItem Header="Mark Symbol Loads">
                        <MenuItem>
                            <MenuItem.Header>
                                <local:ColorSelector ColorSelectedCommand="local:ReferenceCommand.MarkReference" />
                            </MenuItem.Header>
                        </MenuItem>
                    </MenuItem>

                    <MenuItem Header="Mark Symbol Stores">
                        <MenuItem>
                            <MenuItem.Header>
                                <local:ColorSelector ColorSelectedCommand="local:ReferenceCommand.MarkReference" />
                            </MenuItem.Header>
                        </MenuItem>
                    </MenuItem>

                    <MenuItem Header="Mark Symbol Addresses">
                        <MenuItem>
                            <MenuItem.Header>
                                <local:ColorSelector ColorSelectedCommand="local:ReferenceCommand.MarkReference" />
                            </MenuItem.Header>
                        </MenuItem>
                    </MenuItem>
                </ContextMenu>
            </ListView.ContextMenu>
            <ListView.InputBindings>
                <KeyBinding
                    Command="local:ReferenceCommand.JumpToReference"
                    CommandParameter="{Binding SelectedItem, ElementName=ReferenceList}"
                    Key="Enter" />
            </ListView.InputBindings>
        </ListView>
    </Grid>

    <local:ToolPanelControl.CommandBindings>
        <CommandBinding Command="local:ReferenceCommand.JumpToReference" Executed="JumpToReferenceExecuted" />
        <CommandBinding Command="local:ReferenceCommand.CopyToClipboard" Executed="CopyToClipboardExecuted" />
        <CommandBinding Command="local:ReferenceCommand.MarkReference" Executed="MarkReferenceExecuted" />
        <CommandBinding Command="local:ReferenceCommand.UnmarkReference" Executed="UnmarkReferenceExecuted" />
    </local:ToolPanelControl.CommandBindings>


    <local:ToolPanelControl.InputBindings>
        <KeyBinding
            Command="local:ReferenceCommand.JumpToReference"
            CommandParameter="{Binding ElementName=ReferenceList, Path=SelectedItem}"
            Key="Return" />
        <KeyBinding
            Command="local:ReferenceCommand.CopyToClipboard"
            Key="C"
            Modifiers="Ctrl" />
    </local:ToolPanelControl.InputBindings>
</local:ToolPanelControl>