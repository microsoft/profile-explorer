<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:IRExplorerUI"
    xmlns:utils="clr-namespace:IRExplorerUI.Utilities">

    <DataTemplate x:Key="TimePercentageColumnValueTemplate">
        <Border
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Background="{Binding BackColor}"
            BorderBrush="{Binding BorderBrush}"
            BorderThickness="{Binding BorderThickness}"
            ToolTip="{Binding ToolTip}">
            <StackPanel Orientation="Horizontal">
                <Image
                    Width="Auto"
                    Height="Auto"
                    Margin="2,0,2,0"
                    VerticalAlignment="Stretch"
                    Source="{Binding Icon}"
                    Stretch="Uniform"
                    Visibility="{Binding Path=ShowIcon, Converter={StaticResource BoolToVisibility}}" />

                <TextBlock
                    Margin="2,0,2,0"
                    VerticalAlignment="Center"
                    FontFamily="Consolas"
                    FontSize="12"
                    FontWeight="{Binding TextWeight}"
                    Foreground="{Binding TextColor}"
                    Text="{Binding PrefixText}"
                    Visibility="{Binding Path=ShowPrefix, Converter={StaticResource BoolToVisibility}}" />
                <Rectangle
                    Width="{Binding Path=Percentage, Converter={StaticResource DoubleScaling}, ConverterParameter=150.0}"
                    Height="Auto"
                    Margin="2,0,2,0"
                    VerticalAlignment="Stretch"
                    Fill="{Binding PercentageBarBackColor}"
                    Stroke="{Binding PercentageBarBorderBrush}"
                    StrokeThickness="{Binding PercentageBarBorderThickness}"
                    Visibility="{Binding Path=ShowPercentageBar, Converter={StaticResource BoolToVisibility}}" />

                <TextBlock
                    Margin="2,0,2,0"
                    VerticalAlignment="Center"
                    FontFamily="Consolas"
                    FontSize="12"
                    FontWeight="{Binding TextWeight}"
                    Foreground="{Binding TextColor}"
                    Text="{Binding Text}" />
            </StackPanel>
        </Border>
    </DataTemplate>


    <DataTemplate x:Key="TimeColumnValueTemplate">
        <Border
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Background="{Binding BackColor}"
            BorderBrush="{Binding BorderBrush}"
            BorderThickness="{Binding BorderThickness}"
            ToolTip="{Binding ToolTip}">
            <StackPanel Orientation="Horizontal">
                <Image
                    Width="Auto"
                    Height="Auto"
                    VerticalAlignment="Stretch"
                    Source="{Binding Icon}"
                    Stretch="Uniform"
                    Visibility="{Binding Path=ShowIcon, Converter={StaticResource BoolToVisibility}}" />
                <TextBlock
                    VerticalAlignment="Center"
                    FontFamily="Consolas"
                    FontSize="12"
                    FontWeight="{Binding TextWeight}"
                    Foreground="{Binding TextColor}"
                    Text="{Binding Text}" />
            </StackPanel>
        </Border>
    </DataTemplate>


    <Style x:Key="ListViewHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
    </Style>

    <Style x:Key="HoverUnderlineStyle" TargetType="TextBlock">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="TextBlock.TextDecorations" Value="Underline" />
                <Setter Property="TextBlock.Foreground" Value="DarkBlue" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="IRPreviewTooltip" TargetType="ToolTip">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <local:IRPreviewTooltip x:Name="IRPreviewer" Background="Silver" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BlockIRPreviewTooltip" TargetType="ToolTip">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="120" />
                        </Grid.ColumnDefinitions>

                        <local:IRPreviewTooltip
                            x:Name="IRPreviewer"
                            Grid.Column="0"
                            Background="Silver" />
                        <Border
                            Grid.Column="1"
                            Width="120"
                            Background="Gainsboro"
                            BorderBrush="Black"
                            BorderThickness="0,2,2,2">
                            <Grid Margin="4,4,4,4">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="80" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="16" />
                                    <RowDefinition Height="16" />
                                    <RowDefinition Height="16" />
                                    <RowDefinition Height="16" />
                                    <RowDefinition Height="16" />
                                </Grid.RowDefinitions>

                                <TextBlock
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Text="Predecessors" />
                                <TextBlock
                                    Grid.Row="1"
                                    Grid.Column="0"
                                    Text="Successors" />
                                <TextBlock
                                    Grid.Row="2"
                                    Grid.Column="0"
                                    Foreground="DarkBlue"
                                    Text="Loop nesting"
                                    Visibility="{Binding Path=InLoop, Converter={StaticResource BoolToVisibility}}" />
                                <TextBlock
                                    Grid.Row="3"
                                    Grid.Column="0"
                                    Foreground="DarkBlue"
                                    Text="Loop blocks"
                                    Visibility="{Binding Path=InLoop, Converter={StaticResource BoolToVisibility}}" />
                                <TextBlock
                                    Grid.Row="4"
                                    Grid.Column="0"
                                    Foreground="DarkBlue"
                                    Text="Loop children"
                                    Visibility="{Binding Path=InLoop, Converter={StaticResource BoolToVisibility}}" />

                                <TextBlock
                                    Grid.Row="0"
                                    Grid.Column="1"
                                    FontWeight="DemiBold"
                                    Text="{Binding PredecessorCount}" />
                                <TextBlock
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    FontWeight="DemiBold"
                                    Text="{Binding SuccessorCount}" />
                                <TextBlock
                                    Grid.Row="2"
                                    Grid.Column="1"
                                    FontWeight="DemiBold"
                                    Foreground="DarkBlue"
                                    Text="{Binding LoopNesting}"
                                    Visibility="{Binding Path=InLoop, Converter={StaticResource BoolToVisibility}}" />
                                <TextBlock
                                    Grid.Row="3"
                                    Grid.Column="1"
                                    FontWeight="DemiBold"
                                    Foreground="DarkBlue"
                                    Text="{Binding LoopBlocks}"
                                    Visibility="{Binding Path=InLoop, Converter={StaticResource BoolToVisibility}}" />
                                <TextBlock
                                    Grid.Row="4"
                                    Grid.Column="1"
                                    FontWeight="DemiBold"
                                    Foreground="DarkBlue"
                                    Text="{Binding NestedLoops}"
                                    Visibility="{Binding Path=InLoop, Converter={StaticResource BoolToVisibility}}" />
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ExpressionIRPreviewTooltip" TargetType="ToolTip">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Grid>
                        <local:IRPreviewTooltip
                            x:Name="IRPreviewer"
                            Grid.Column="0"
                            Background="Silver" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#FFB1D6F1" />
    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />

    <Style x:Key="FlatListViewItem" TargetType="ListViewItem">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border
                        Name="Border"
                        Padding="1"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectedBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="IsSelected" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="#D0E3F1" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ContextMenu x:Key="GraphContextMenu">
        <MenuItem
            Focusable="False"
            Header="Mark Block"
            IsHitTestVisible="False" />
        <MenuItem>
            <MenuItem.Header>
                <local:ColorSelector ColorSelectedCommand="local:GraphCommand.MarkBlock" />
            </MenuItem.Header>
        </MenuItem>
        <Separator />
        <MenuItem Header="Mark Predecessors">
            <MenuItem>
                <MenuItem.Header>
                    <local:ColorSelector ColorSelectedCommand="local:GraphCommand.MarkPredecessors" />
                </MenuItem.Header>
            </MenuItem>
        </MenuItem>
        <MenuItem Header="Mark Successors">
            <MenuItem>
                <MenuItem.Header>
                    <local:ColorSelector ColorSelectedCommand="local:GraphCommand.MarkSuccessors" />
                </MenuItem.Header>
            </MenuItem>
        </MenuItem>
        <MenuItem Header="Mark Node Group" ToolTip="Mark block and all its predecessors and succesors">
            <MenuItem>
                <MenuItem.Header>
                    <local:ColorSelector ColorSelectedCommand="local:GraphCommand.MarkGroup" />
                </MenuItem.Header>
            </MenuItem>
        </MenuItem>
        <Separator />

        <MenuItem Header="Mark Dominators" ToolTip="Mark all the blocks that dominate it">
            <MenuItem>
                <MenuItem.Header>
                    <local:ColorSelector ColorSelectedCommand="local:GraphCommand.MarkDominators" />
                </MenuItem.Header>
            </MenuItem>
        </MenuItem>
        <MenuItem Header="Mark Post-Dominators" ToolTip="Mark all the blocks that post-dominate it">
            <MenuItem>
                <MenuItem.Header>
                    <local:ColorSelector ColorSelectedCommand="local:GraphCommand.MarkPostDominators" />
                </MenuItem.Header>
            </MenuItem>
        </MenuItem>
        <MenuItem Header="Mark Dominance Frontier" ToolTip="Mark all the blocks in its dominance frontier">
            <MenuItem>
                <MenuItem.Header>
                    <local:ColorSelector ColorSelectedCommand="local:GraphCommand.MarkDominanceFrontier" />
                </MenuItem.Header>
            </MenuItem>
        </MenuItem>
        <MenuItem Header="Mark Post-Dominance Frontier" ToolTip="Mark all the blocks in its post-dominance frontier">
            <MenuItem>
                <MenuItem.Header>
                    <local:ColorSelector ColorSelectedCommand="local:GraphCommand.MarkPostDominanceFrontier" />
                </MenuItem.Header>
            </MenuItem>
        </MenuItem>
        <Separator />

        <MenuItem Header="Mark Loop">
            <MenuItem>
                <MenuItem.Header>
                    <local:ColorSelector ColorSelectedCommand="local:GraphCommand.MarkLoop" CommandTarget="{Binding ElementName=GraphHost}" />
                </MenuItem.Header>
            </MenuItem>
        </MenuItem>

        <MenuItem Header="Mark Loop Nest">
            <MenuItem>
                <MenuItem.Header>
                    <local:ColorSelector ColorSelectedCommand="local:GraphCommand.MarkLoopNest" />
                </MenuItem.Header>
            </MenuItem>
        </MenuItem>
        <Separator />

        <MenuItem Header="Query">
            <MenuItem
                Command="local:GraphCommand.SelectQueryBlock1"
                CommandTarget="{Binding ElementName=GraphHost}"
                Header="Select Block A"
                InputGestureText="Click + Ctrl/Alt + A/1" />

            <MenuItem
                Command="local:GraphCommand.SelectQueryBlock2"
                CommandTarget="{Binding ElementName=GraphHost}"
                Header="Select Block B"
                InputGestureText="Click + Ctrl/Alt + B/2" />

        </MenuItem>

        <MenuItem Header="Clear">
            <MenuItem.Icon>
                <Image
                    Width="16"
                    Height="16"
                    Source="{StaticResource RemoveIcon}" />
            </MenuItem.Icon>
            <MenuItem
                Command="local:GraphCommand.ClearMarked"
                CommandTarget="{Binding ElementName=GraphHost}"
                Header="Selected Marker" />
            <MenuItem
                Command="local:GraphCommand.ClearAllMarked"
                CommandTarget="{Binding ElementName=GraphHost}"
                Header="All Markers" />
        </MenuItem>
    </ContextMenu>

    <Style x:Key="RemarkTreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#FFB1D6F1" />
            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="#FFB1D6F1" />
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
            <SolidColorBrush x:Key="GlyphBrush" Color="#444" />

            <Style x:Key="TreeViewItemFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle
                                Margin="0,0,0,0"
                                Opacity="0"
                                Stroke="Black"
                                StrokeDashArray="1 2"
                                StrokeThickness="5" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Grid
                                Width="15"
                                Height="13"
                                Background="Transparent">
                                <Path
                                    x:Name="ExpandPath"
                                    Margin="1,1,1,1"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Data="M 4 0 L 8 4 L 4 8 Z"
                                    Fill="{StaticResource GlyphBrush}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="ExpandPath" Property="Data" Value="M 0 4 L 8 4 L 4 8 Z" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>

        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="1,0,0,0" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" MinWidth="19" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Rectangle
                            x:Name="VerLn"
                            Grid.RowSpan="2"
                            Width="1"
                            Margin="0,0,0,0"
                            Stroke="#66888888"
                            StrokeThickness="1" />

                        <ToggleButton
                            x:Name="Expander"
                            Margin="5,-5,0,0"
                            Panel.ZIndex="2"
                            ClickMode="Press"
                            IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                            Style="{StaticResource ExpandCollapseToggleStyle}" />
                        <Border
                            x:Name="Bd"
                            Grid.Column="1"
                            Grid.ColumnSpan="2"
                            Margin="-10,0,0,0"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="4" />
                                </Grid.RowDefinitions>
                                <ContentPresenter
                                    x:Name="PART_Header"
                                    Grid.Row="0"
                                    Margin="8,2,0,0"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    ContentSource="Header"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                                <Rectangle
                                    Grid.Row="1"
                                    Height="1"
                                    VerticalAlignment="Bottom"
                                    Stroke="#66888888"
                                    StrokeThickness="1" />
                            </Grid>
                        </Border>
                        <ItemsPresenter
                            x:Name="ItemsHost"
                            Grid.Row="1"
                            Grid.Column="1"
                            Grid.ColumnSpan="2" />


                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource LineConverter}}" Value="true">
                            <Setter TargetName="VerLn" Property="VerticalAlignment" Value="Stretch" />
                        </DataTrigger>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false" />
                                <Condition Property="Width" Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinWidth" Value="75" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false" />
                                <Condition Property="Height" Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinHeight" Value="19" />
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="IsSelectionActive" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>