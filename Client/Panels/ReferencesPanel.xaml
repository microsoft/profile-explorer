<local:ToolPanelControl
    x:Class="Client.ReferencesPanel"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:Client"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="28" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" HorizontalAlignment="Stretch"
                   Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="75"/>
            </Grid.ColumnDefinitions>
            <ToolBarTray
                Grid.Column="0"
            Height="28"
            HorizontalAlignment="Stretch" IsLocked="True"
            Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}">
                <ToolBar Loaded="ToolBar_Loaded"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}">

                    <TextBlock
                    Margin="4,0,0,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="Show" />

                    <ComboBox x:Name="FilterComboBox"
                    Width="150"
                    Margin="4,0,0,0"
                    VerticalAlignment="Center"
                    Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                    Loaded="ComboBox_Loaded"
                    SelectionChanged="FilterComboBox_SelectionChanged"
                    SelectedIndex="0" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}">
                        <ComboBoxItem Tag="All">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                                <TextBlock Text="Overview" Width="100"/>
                                <Separator/>
                                <TextBlock Text=""/>
                            </StackPanel>
                        </ComboBoxItem>
                        <ComboBoxItem Tag="SSA">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                                <TextBlock Text="SSA uses" Width="100"/>
                                <Separator/>
                                <TextBlock Text="{Binding SSACount}"/>
                            </StackPanel>
                        </ComboBoxItem>
                        <ComboBoxItem Tag="Load">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Load uses" Width="100"/>
                                <TextBlock Text="{Binding LoadCount}"/>
                            </StackPanel>
                        </ComboBoxItem>
                        <ComboBoxItem Tag="Store">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Store uses" Width="100"/>
                                <TextBlock Text="{Binding StoreCount}"/>
                            </StackPanel>
                        </ComboBoxItem>
                        <ComboBoxItem Tag="Address">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Address uses" Width="100"/>
                                <TextBlock Text="{Binding AddressCount}"/>
                            </StackPanel>
                        </ComboBoxItem>
                    </ComboBox>

                    <Separator/>


                    <Button Command="local:ReferenceCommand.JumpToReference"
                            CommandParameter="{Binding ElementName=ReferenceList, Path=SelectedItem}"
                            CommandTarget="{Binding ElementName=ReferenceList}"
                            Margin="4,0,0,0"
                            ToolTip="Jump to reference (Return)">
                        <Image Source="{StaticResource JumpIcon}" />
                    </Button>


                    <Button Command="local:ReferenceCommand.CopyToClipboard"
                            CommandTarget="{Binding ElementName=ReferenceList}"
                         ToolTip="Copy reference list to clipboard (Ctrl+C)">
                        <Image Source="{StaticResource ClipboardIcon}" />
                    </Button>

                    <Separator/>
                    <TextBlock Text="Symbol" Margin="4,0,0,0"  VerticalAlignment="Center"/>
                    <TextBlock x:Name="SymbolName" Margin="8,0,0,0" MinWidth="100" FontWeight="DemiBold" Text="" VerticalAlignment="Center"/>
                </ToolBar>
            </ToolBarTray>

            <local:PanelToolbarTray Grid.Column="1" x:Name="FixedToolbar" 
                                    SettingsClicked="PanelToolbarTray_SettingsClicked" 
                                    PinnedChanged="PanelToolbarTray_PinnedChanged" 
                                    DuplicateClicked="PanelToolbarTray_DuplicateClicked" 
                                    BindMenuOpen="FixedToolbar_BindMenuOpen"
                                    BindMenuItemSelected="FixedToolbar_BindMenuItemSelected"/>
        </Grid>

        <ListView
            x:Name="ReferenceList"
            VirtualizingPanel.IsVirtualizing="True"
            VirtualizingPanel.VirtualizationMode="Recycling"
            Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
            BorderBrush="{x:Null}" Margin="0,27,0,0" Grid.RowSpan="2" BorderThickness="0,0,0,0">
            <ListView.View>
                <GridView>
                    <GridViewColumn DisplayMemberBinding="{Binding Index}" Header="#" Width="30">
                        <GridViewColumn.HeaderContainerStyle>
                            <Style TargetType="{x:Type GridViewColumnHeader}">
                                <Setter Property="HorizontalContentAlignment" Value="Left" />
                            </Style>
                        </GridViewColumn.HeaderContainerStyle>
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding Kind}" Header="Kind" Width="60">
                        <GridViewColumn.HeaderContainerStyle>
                            <Style TargetType="{x:Type GridViewColumnHeader}">
                                <Setter Property="HorizontalContentAlignment" Value="Left" />
                            </Style>
                        </GridViewColumn.HeaderContainerStyle>
                    </GridViewColumn>

                    <GridViewColumn DisplayMemberBinding="{Binding Block}" Header="Block" Width="100">
                        <GridViewColumn.HeaderContainerStyle>
                            <Style TargetType="{x:Type GridViewColumnHeader}">
                                <Setter Property="HorizontalContentAlignment" Value="Left" />
                            </Style>
                        </GridViewColumn.HeaderContainerStyle>
                    </GridViewColumn>
                    
                    <GridViewColumn Header="Preview" Width="400">
                        <GridViewColumn.HeaderContainerStyle>
                            <Style TargetType="{x:Type GridViewColumnHeader}">
                                <Setter Property="HorizontalContentAlignment" Value="Left" />
                            </Style>
                        </GridViewColumn.HeaderContainerStyle>

                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <ContentPresenter Content="{Binding Preview}"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn DisplayMemberBinding="{Binding Line}" Header="Line" Width="70">
                        <GridViewColumn.HeaderContainerStyle>
                            <Style TargetType="{x:Type GridViewColumnHeader}">
                                <Setter Property="HorizontalContentAlignment" Value="Left" />
                            </Style>
                        </GridViewColumn.HeaderContainerStyle>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource FlatListViewItem}">
                    <EventSetter Event="Control.MouseDoubleClick" Handler="ListViewItem_MouseDoubleClick"/>
                    <EventSetter Event="UIElement.MouseEnter" Handler="ListViewItem_MouseEnter"/>
                    
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Kind}" Value="Store">
                            <Setter Property="Foreground" Value="#006700"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Kind}" Value="Load">
                            <Setter Property="Foreground" Value="#4E0088"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Kind}" Value="Address">
                            <Setter Property="FontWeight" Value="DemiBold" />
                            <Setter Property="Foreground" Value="#BE0000"/>
                        </DataTrigger>
                    </Style.Triggers>

                </Style>
            </ListView.ItemContainerStyle>
            <ListView.ContextMenu>
                <ContextMenu>
                    <MenuItem
                        Command="local:ReferenceCommand.JumpToReference"
                        CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}"
                        Header="Jump to Reference"
                        InputGestureText="Return">
                        <MenuItem.Icon>
                            <Image
                                Width="16"
                                Height="16"
                                Source="{StaticResource JumpIcon}" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator />

                    <MenuItem Header="Mark Reference" IsHitTestVisible="False" Focusable="False"/>
                    <MenuItem>
                        <MenuItem.Header>
                            <local:ColorSelector ColorSelectedCommand="local:ReferenceCommand.MarkReference"/>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem Header="Clear Marker" Command="local:ReferenceCommand.UnmarkReference"/>
                    <Separator/>

                    <MenuItem Header="Mark Visible References">
                        <MenuItem>
                            <MenuItem.Header>
                                <local:ColorSelector ColorSelectedCommand="local:ReferenceCommand.MarkReference"/>
                            </MenuItem.Header>
                        </MenuItem>
                    </MenuItem>

                    <MenuItem Header="Mark All References"/>

                </ContextMenu>
            </ListView.ContextMenu>
            <ListView.InputBindings>
                <KeyBinding
                    Key="Enter"
                    Command="local:ReferenceCommand.JumpToReference"
                    CommandParameter="{Binding SelectedItem, ElementName=BookmarkList}" />
            </ListView.InputBindings>
        </ListView>
    </Grid>

    <local:ToolPanelControl.CommandBindings>
        <CommandBinding Command="local:ReferenceCommand.JumpToReference" Executed="JumpToReferenceExecuted"/>
        <CommandBinding Command="local:ReferenceCommand.CopyToClipboard" Executed="CopyToClipboardExecuted"/>
        <CommandBinding Command="local:ReferenceCommand.MarkReference" Executed="MarkReferenceExecuted"/>
        <CommandBinding Command="local:ReferenceCommand.UnmarkReference" Executed="UnmarkReferenceExecuted"/>
    </local:ToolPanelControl.CommandBindings>


    <local:ToolPanelControl.InputBindings>
        <KeyBinding Key="Return" Command="local:ReferenceCommand.JumpToReference"
                    CommandParameter="{Binding ElementName=ReferenceList, Path=SelectedItem}"/>
        <KeyBinding Key="C" Modifiers="Ctrl" Command="local:ReferenceCommand.CopyToClipboard"/>
    </local:ToolPanelControl.InputBindings>
</local:ToolPanelControl>
