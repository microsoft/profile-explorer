<Window
    x:Class="Client.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:avalonDock="https://github.com/Dirkster99/AvalonDock"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:Client"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Title="IR Explorer"
    Width="1600"
    Height="1000"
    Background="#F0F0F0F0"
    Loaded="Window_Loaded"
    ResizeMode="CanResizeWithGrip"
    UseLayoutRounding="True"
    mc:Ignorable="d">

    <!--<Window.Resources>
        <SolidColorBrush x:Key="StandardBorderBrush" Color="#888" />
        <SolidColorBrush x:Key="StandardBackgroundBrush" Color="Black" />
        <SolidColorBrush x:Key="HoverBorderBrush" Color="#DDD" />
        <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="Gray" />
        <SolidColorBrush x:Key="SelectedForegroundBrush" Color="White" />
        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
        <SolidColorBrush x:Key="GlyphBrush" Color="#444" />
        <SolidColorBrush x:Key="NormalBrush" Color="#888" />
        <SolidColorBrush x:Key="NormalBorderBrush" Color="#888" />
        <SolidColorBrush x:Key="HorizontalNormalBrush" Color="#FF686868" />
        <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="#888" />

        <LinearGradientBrush x:Key="ListBoxBackgroundBrush" StartPoint="0,0" EndPoint="1,0.001">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Offset="0.0" Color="White" />
                    <GradientStop Offset="0.6" Color="White" />
                    <GradientStop Offset="1.2" Color="#DDDDDD" />
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="StandardBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Offset="0.0" Color="#FFF" />
                    <GradientStop Offset="1.0" Color="#CCC" />
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Offset="0.0" Color="#BBB" />
                    <GradientStop Offset="0.1" Color="#EEE" />
                    <GradientStop Offset="0.9" Color="#EEE" />
                    <GradientStop Offset="1.0" Color="#FFF" />
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="Visibility" Value="Hidden" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border
                            Name="Border"
                            Margin="1"
                            Background="{StaticResource NormalBrush}"
                            BorderBrush="{StaticResource NormalBorderBrush}"
                            BorderThickness="1"
                            CornerRadius="2">
                            <Path
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"
                                Fill="{StaticResource GlyphBrush}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="Visibility" Value="Hidden" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Black" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border
                            Width="8"
                            Margin="8,0,-2,0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0"
                            CornerRadius="4" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="0" />
                    <RowDefinition Height="0.00001*" />
                    <RowDefinition MaxHeight="0" />
                </Grid.RowDefinitions>
                <Border
                    Grid.RowSpan="3"
                    Background="Transparent"
                    CornerRadius="2" />
                <RepeatButton
                    Grid.Row="0"
                    Height="18"
                    Command="ScrollBar.LineUpCommand"
                    Content="M 0 4 L 8 4 L 4 0 Z"
                    Style="{StaticResource ScrollBarLineButton}" />
                <Track
                    Name="PART_Track"
                    Grid.Row="1"
                    IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource ScrollBarPageButton}" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb
                            Margin="1,0,1,0"
                            Background="{StaticResource HorizontalNormalBrush}"
                            BorderBrush="{StaticResource HorizontalNormalBorderBrush}"
                            Style="{StaticResource ScrollBarThumb}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource ScrollBarPageButton}" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton
                    Grid.Row="3"
                    Height="18"
                    Command="ScrollBar.LineDownCommand"
                    Content="M 0 0 L 4 4 L 8 0 Z"
                    Style="{StaticResource ScrollBarLineButton}" />
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="18" />
                    <ColumnDefinition Width="0.00001*" />
                    <ColumnDefinition MaxWidth="18" />
                </Grid.ColumnDefinitions>
                <Border
                    Grid.ColumnSpan="3"
                    Background="#F0F0F0"
                    CornerRadius="2" />
                <RepeatButton
                    Grid.Column="0"
                    Width="18"
                    Command="ScrollBar.LineLeftCommand"
                    Content="M 4 0 L 4 8 L 0 4 Z"
                    Style="{StaticResource ScrollBarLineButton}" />
                <Track
                    Name="PART_Track"
                    Grid.Column="1"
                    IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageLeftCommand" Style="{StaticResource ScrollBarPageButton}" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb
                            Margin="0,1,0,1"
                            Background="{StaticResource NormalBrush}"
                            BorderBrush="{StaticResource NormalBorderBrush}"
                            Style="{StaticResource ScrollBarThumb}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageRightCommand" Style="{StaticResource ScrollBarPageButton}" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton
                    Grid.Column="3"
                    Width="18"
                    Command="ScrollBar.LineRightCommand"
                    Content="M 0 0 L 4 4 L 0 8 Z"
                    Style="{StaticResource ScrollBarLineButton}" />
            </Grid>
        </ControlTemplate>
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto" />
                    <Setter Property="Height" Value="18" />
                    <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="18" />
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="FavsScrollViewer" TargetType="{x:Type ScrollViewer}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter Grid.Column="1" />
                            <ScrollBar
                                Name="PART_VerticalScrollBar"
                                Maximum="{TemplateBinding ScrollableHeight}"
                                ViewportSize="{TemplateBinding ViewportHeight}"
                                Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                Value="{TemplateBinding VerticalOffset}" />
                            <ScrollBar
                                Name="PART_HorizontalScrollBar"
                                Grid.Row="1"
                                Grid.Column="1"
                                Maximum="{TemplateBinding ScrollableWidth}"
                                Orientation="Horizontal"
                                ViewportSize="{TemplateBinding ViewportWidth}"
                                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                Value="{TemplateBinding HorizontalOffset}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>-->

    <Window.CommandBindings>
        <CommandBinding
            CanExecute="CommandBinding_PreviewCanExecute"
            Command="local:AppCommand.FullScreen"
            PreviewCanExecute="CommandBinding_PreviewCanExecute"
            PreviewExecuted="FullScreenExecuted" />

        <CommandBinding
            CanExecute="CommandBinding_PreviewCanExecute"
            Command="local:AppCommand.OpenDocument"
            PreviewCanExecute="CommandBinding_PreviewCanExecute"
            PreviewExecuted="OpenDocumentExecuted" />

        <CommandBinding
            CanExecute="CommandBinding_PreviewCanExecute"
            Command="local:AppCommand.OpenNewDocument"
            Executed="OpenNewDocumentExecuted"
            PreviewCanExecute="CommandBinding_PreviewCanExecute"
            PreviewExecuted="OpenNewDocumentExecuted" />

        <CommandBinding
            CanExecute="CanExecuteDocumentCommand"
            Command="local:AppCommand.CloseDocument"
            Executed="CloseDocumentExecuted"
            PreviewCanExecute="CanExecuteDocumentCommand"
            PreviewExecuted="CloseDocumentExecuted" />

        <CommandBinding
            CanExecute="CanExecuteDocumentCommand"
            Command="local:AppCommand.SaveDocument"
            Executed="SaveDocumentExecuted"
            PreviewCanExecute="CanExecuteDocumentCommand"
            PreviewExecuted="SaveDocumentExecuted" />

        <CommandBinding
            CanExecute="CanExecuteDocumentCommand"
            Command="local:AppCommand.SaveAsDocument"
            Executed="SaveAsDocumentExecuted"
            PreviewCanExecute="CanExecuteDocumentCommand"
            PreviewExecuted="SaveAsDocumentExecuted" />

        <CommandBinding
            CanExecute="CanExecuteDocumentCommand"
            Command="local:AppCommand.ReloadDocument"
            Executed="ReloadDocumentExecuted"
            PreviewCanExecute="CanExecuteDocumentCommand"
            PreviewExecuted="ReloadDocumentExecuted" />

        <CommandBinding
            CanExecute="CanExecuteDocumentCommand"
            Command="local:AppCommand.AutoReloadDocument"
            Executed="AutoReloadDocumentExecuted"
            PreviewCanExecute="CanExecuteDocumentCommand"
            PreviewExecuted="AutoReloadDocumentExecuted" />

        <CommandBinding
            CanExecute="CommandBinding_PreviewCanExecute"
            Command="local:AppCommand.OpenDiffDocument"
            PreviewCanExecute="CommandBinding_PreviewCanExecute"
            PreviewExecuted="OpenDiffDocumentExecuted" />

        <CommandBinding
            CanExecute="CommandBinding_PreviewCanExecute"
            Command="local:AppCommand.OpenBaseDiffDocuments"
            PreviewCanExecute="CommandBinding_PreviewCanExecute"
            PreviewExecuted="OpenBaseDiffDocumentsExecuted" />

        <CommandBinding
            CanExecute="CloseDiffDocumentCanExecute"
            Command="local:AppCommand.CloseDiffDocument"
            PreviewCanExecute="CloseDiffDocumentCanExecute"
            PreviewExecuted="CloseDiffDocumentExecuted" />
    </Window.CommandBindings>

    <Window.InputBindings>
        <KeyBinding Key="F11" Command="local:AppCommand.FullScreen" />
        <KeyBinding
            Key="P"
            Command="local:Command.PreviousSection"
            Modifiers="Ctrl" />
        <KeyBinding
            Key="N"
            Command="local:Command.NextSection"
            Modifiers="Ctrl" />
        <KeyBinding
            Key="O"
            Command="local:AppCommand.OpenDocument"
            Modifiers="Ctrl" />
        <KeyBinding
            Key="O"
            Command="local:AppCommand.OpenNewDocument"
            Modifiers="Ctrl+Shift" />
        <KeyBinding
            Key="F4"
            Command="local:AppCommand.CloseDocument"
            Modifiers="Ctrl" />
        <KeyBinding
            Key="S"
            Command="local:AppCommand.SaveDocument"
            Modifiers="Ctrl" />
        <KeyBinding
            Key="S"
            Command="local:AppCommand.SaveAsDocument"
            Modifiers="Ctrl+Shift" />

        <KeyBinding Key="F5" Command="local:AppCommand.ReloadDocument" />
        <KeyBinding
            Key="F5"
            Command="local:AppCommand.AutoReloadDocument"
            Modifiers="Ctrl" />
        <KeyBinding Key="F9" Command="local:AppCommand.OpenBaseDiffDocuments" />
        <KeyBinding
            Key="F9"
            Command="local:AppCommand.OpenDiffDocument"
            Modifiers="Ctrl" />
    </Window.InputBindings>

    <Grid x:Name="MainGrid">
        <!--  Zoom for the entire app  -->
        <!--<Grid.LayoutTransform>
            <ScaleTransform CenterX="0" CenterY="0"
            ScaleX="{Binding ElementName=uiScaleSlider,Path=Value}"
            ScaleY="{Binding ElementName=uiScaleSlider,Path=Value}"/>
        </Grid.LayoutTransform>-->

        <Grid.RowDefinitions>
            <RowDefinition Height="18" />
            <RowDefinition Height="*" />
            <RowDefinition Height="24" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="0" />
            </Grid.ColumnDefinitions>

            <Menu
                x:Name="MainMenu"
                Grid.Column="0"
                VerticalAlignment="Center"
                Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}">
                <MenuItem Header="_File">
                    <MenuItem
                        Command="local:AppCommand.OpenDocument"
                        Header="_Open File (Ctrl+O)"
                        InputGestureText="Ctrl+O" />
                    <MenuItem
                        Command="local:AppCommand.OpenNewDocument"
                        Header="Open File in _New Window"
                        InputGestureText="Ctrl+Shift+O" />

                    <MenuItem x:Name="RecentFilesMenu" Header="_Recent Files">
                        <Separator />
                        <MenuItem Click="RecentFilesMenu_Click" Header="Clear" />
                    </MenuItem>
                    <Separator />

                    <MenuItem Command="local:AppCommand.OpenBaseDiffDocuments" Header="_Compare Base/Diff Files (F9)" />
                    <MenuItem Command="local:AppCommand.OpenDiffDocument" Header="Open _Diff File (Ctrl+F9)" />
                    <MenuItem Command="local:AppCommand.CloseDiffDocument" Header="Close Diff File" />
                    <Separator />

                    <MenuItem
                        Command="local:AppCommand.ReloadDocument"
                        Header="_Reload File"
                        InputGestureText="F5" />
                    <MenuItem
                        Command="local:AppCommand.AutoReloadDocument"
                        Header="Auto-Reload File on Change"
                        InputGestureText="Ctrl+F5"
                        IsCheckable="True"
                        IsChecked="True" />
                    <Separator />

                    <MenuItem
                        Command="local:AppCommand.SaveDocument"
                        Header="_Save Session"
                        InputGestureText="Ctrl+S" />
                    <MenuItem
                        Command="local:AppCommand.SaveAsDocument"
                        Header="Save Session _As..."
                        InputGestureText="Ctrl+Shift+S" />
                    <MenuItem
                        Command="local:AppCommand.CloseDocument"
                        Header="Close Session"
                        InputGestureText="Ctrl+F4" />
                    <Separator />
                    <MenuItem Click="MenuItem_Exit" Header="E_xit" />
                </MenuItem>

                <MenuItem Header="View">
                    <MenuItem Click="MenuItem_Click_3" Header="Side-by-side panels" />
                    <Separator />

                    <MenuItem
                        Click="ShowPanelMenuClicked"
                        Header="Section Panel"
                        Tag="Section" />
                    <MenuItem
                        Click="ShowPanelMenuClicked"
                        Header="Definition Panel"
                        Tag="Definition" />
                    <MenuItem
                        Click="ShowPanelMenuClicked"
                        Header="Refrences Panel"
                        Tag="References" />
                    <MenuItem
                        Click="ShowPanelMenuClicked"
                        Header="Bookmarks Panel"
                        Tag="Bookmarks" />
                    <MenuItem
                        Click="ShowPanelMenuClicked"
                        Header="Source File Panel"
                        Tag="SourceFile" />
                    <Separator />
                    <MenuItem
                        Click="ShowPanelMenuClicked"
                        Header="Flow Graph Panel"
                        Tag="FlowGraph" />
                    <MenuItem
                        Click="ShowPanelMenuClicked"
                        Header="Dominator Tree Panel"
                        Tag="DominatorTree" />
                    <MenuItem
                        Click="ShowPanelMenuClicked"
                        Header="Post-Dominator Tree Panel"
                        Tag="PostDominatorTree" />
                    <MenuItem Header="Control Dependence Graph Panel" IsEnabled="False" />
                    <MenuItem Header="Expression Graph Panel" IsEnabled="False" />
                </MenuItem>
                <MenuItem Header="Tools">
                    <MenuItem
                        Header="Diff Mode"
                        IsCheckable="True"
                        IsChecked="{Binding ElementName=DiffModeButton, Path=IsChecked, Mode=TwoWay}" />
                    <Separator />

                    <MenuItem
                        Click="MenuItem_Click_6"
                        Header="Settings"
                        IsEnabled="False" />
                </MenuItem>
                <MenuItem Header="Help">
                    <MenuItem Click="MenuItem_Click_4" Header="Documentation" />
                    <MenuItem Click="MenuItem_Click_5" Header="About" />

                    <Separator />
                    <MenuItem Header="Developer">
                        <MenuItem
                            x:Name="DevMenuStartupTime"
                            Header="Diff time: 0"
                            IsEnabled="False" />
                        <MenuItem Click="MenuItem_Click_2" Header="Create debug files" />
                        <MenuItem Click="MenuItem_Click" Header="Crash application" />
                        <MenuItem Click="MenuItem_Click_7" Header="Query" />
                        <MenuItem Click="MenuItem_Click_8" Header="Start Grpc Server" />
                    </MenuItem>
                </MenuItem>
            </Menu>


        </Grid>


        <avalonDock:DockingManager
            x:Name="DockManager"
            Grid.Row="1"
            VerticalAlignment="Stretch"
            AllowMixedOrientation="True"
            AutomationProperties.AutomationId="AutoDockManager"
            Theme="{Binding ElementName=ThemeCombobox, Path=SelectedItem.Tag}">
            <!--<avalonDock:DockingManager.Theme>
                <avalonDock:Vs2013LightTheme />
            </avalonDock:DockingManager.Theme>-->

            <!--<avalonDock:DockingManager.DocumentHeaderTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{Binding IconSource}" Margin="0,0,4,0"/>
                        <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis"/>
                    </StackPanel>
                </DataTemplate>
            </avalonDock:DockingManager.DocumentHeaderTemplate>-->

            <avalonDock:LayoutRoot>
                <avalonDock:LayoutPanel Orientation="Vertical">
                    <avalonDock:LayoutPanel Orientation="Horizontal">
                        <avalonDock:LayoutAnchorablePaneGroup
                            x:Name="LeftPanelGroup"
                            DockMinWidth="50"
                            DockWidth="400"
                            FloatingWidth="400" />


                        <!--  Document viewer  -->
                        <avalonDock:LayoutDocumentPaneGroup x:Name="DocumentPanelGroup" />

                        <!--  Right panels  -->
                        <avalonDock:LayoutAnchorablePaneGroup
                            DockMinWidth="50"
                            DockWidth="450"
                            FloatingWidth="400">
                            <avalonDock:LayoutAnchorablePane>
                                <avalonDock:LayoutAnchorable
                                    x:Name="FlowGraphPanelHost"
                                    Title="Flow Graph"
                                    ContentId="FlowGraph"
                                    IsActiveChanged="LayoutAnchorable_IsActiveChanged"
                                    IsSelectedChanged="LayoutAnchorable_IsSelectedChanged">
                                    <local:GraphPanel x:Name="FlowGraphPanel" />
                                </avalonDock:LayoutAnchorable>

                                <avalonDock:LayoutAnchorable
                                    x:Name="DominatorTreePanelHost"
                                    Title="Dominator Tree"
                                    ContentId="DominatorTree"
                                    IsActiveChanged="LayoutAnchorable_IsActiveChanged"
                                    IsSelectedChanged="LayoutAnchorable_IsSelectedChanged">
                                    <local:DominatorTreePanel x:Name="DominatorTreePanel" />
                                </avalonDock:LayoutAnchorable>

                                <avalonDock:LayoutAnchorable
                                    x:Name="PostDominatorTreePanelHost"
                                    Title="PostDominator Tree"
                                    ContentId="PostDominatorTree"
                                    IsActiveChanged="LayoutAnchorable_IsActiveChanged"
                                    IsSelectedChanged="LayoutAnchorable_IsSelectedChanged">
                                    <local:PostDominatorTreePanel x:Name="PostDominatorTreePanel" />
                                </avalonDock:LayoutAnchorable>

                                <avalonDock:LayoutAnchorable
                                    Title="Loop Graph"
                                    ContentId="LoopGraph"
                                    IsActiveChanged="LayoutAnchorable_IsActiveChanged"
                                    IsSelectedChanged="LayoutAnchorable_IsSelectedChanged">
                                    <Grid>
                                        <Button Content="Placeholder" />
                                    </Grid>
                                </avalonDock:LayoutAnchorable>

                                <avalonDock:LayoutAnchorable
                                    Title="Control Dependence Graph"
                                    ContentId="ControlDependenceGraph"
                                    IsActiveChanged="LayoutAnchorable_IsActiveChanged"
                                    IsSelectedChanged="LayoutAnchorable_IsSelectedChanged">
                                    <Grid>
                                        <Button Content="Placeholder" />
                                    </Grid>
                                </avalonDock:LayoutAnchorable>

                                <avalonDock:LayoutAnchorable
                                    x:Name="ExpressionGraphPanelHost"
                                    Title="Expression Graph"
                                    CanAutoHide="False"
                                    CanDockAsTabbedDocument="False"
                                    CanHide="False"
                                    ContentId="ExpressionGraph"
                                    IsActiveChanged="LayoutAnchorable_IsActiveChanged"
                                    IsSelectedChanged="LayoutAnchorable_IsSelectedChanged">
                                    <local:ExpressionGraphPanel x:Name="ExpressionGraphPanel" />
                                </avalonDock:LayoutAnchorable>
                            </avalonDock:LayoutAnchorablePane>
                        </avalonDock:LayoutAnchorablePaneGroup>
                    </avalonDock:LayoutPanel>

                    <!--  Bottom panels  -->
                    <avalonDock:LayoutPanel
                        DockHeight="280"
                        DockMinHeight="50"
                        FloatingHeight="280"
                        Orientation="Horizontal">
                        <!--  Left bottom side  -->
                        <avalonDock:LayoutAnchorablePaneGroup>
                            <avalonDock:LayoutAnchorablePane>
                                <avalonDock:LayoutAnchorable
                                    x:Name="SectionPanelHost"
                                    Title="Sections"
                                    CanClose="False"
                                    ContentId="Sections"
                                    FloatingWidth="400"
                                    IsActiveChanged="LayoutAnchorable_IsActiveChanged"
                                    IsSelectedChanged="LayoutAnchorable_IsSelectedChanged">
                                    <local:SectionPanelPair x:Name="SectionPanel" />
                                </avalonDock:LayoutAnchorable>

                                <avalonDock:LayoutAnchorable
                                    x:Name="PassOutputHost"
                                    Title="Pass Output"
                                    ContentId="PassOutput"
                                    IsActiveChanged="LayoutAnchorable_IsActiveChanged"
                                    IsSelectedChanged="LayoutAnchorable_IsSelectedChanged">
                                    <local:PassOutputPanel x:Name="PassOutputPanel" />
                                </avalonDock:LayoutAnchorable>


                                <avalonDock:LayoutAnchorable
                                    x:Name="DefinitionPanelHost"
                                    Title="Definition"
                                    ContentId="Definition"
                                    IsActiveChanged="LayoutAnchorable_IsActiveChanged"
                                    IsSelectedChanged="LayoutAnchorable_IsSelectedChanged">
                                    <local:DefinitionPanel x:Name="DefinitionPanel" />
                                </avalonDock:LayoutAnchorable>

                                <avalonDock:LayoutAnchorable
                                    x:Name="ScriptingPanelHost"
                                    Title="Scripting"
                                    ContentId="Scripting"
                                    IsActiveChanged="LayoutAnchorable_IsActiveChanged"
                                    IsSelectedChanged="LayoutAnchorable_IsSelectedChanged">
                                    <local:ScriptingPanel x:Name="ScriptingPanel" />
                                </avalonDock:LayoutAnchorable>

                                <avalonDock:LayoutAnchorable
                                    x:Name="IRInfoPanelHost"
                                    Title="Developer"
                                    ContentId="Developer"
                                    IsActiveChanged="LayoutAnchorable_IsActiveChanged"
                                    IsSelectedChanged="LayoutAnchorable_IsSelectedChanged">
                                    <local:IRInfoPanel x:Name="IRInfoPanel" />
                                </avalonDock:LayoutAnchorable>

                            </avalonDock:LayoutAnchorablePane>
                        </avalonDock:LayoutAnchorablePaneGroup>

                        <!--  Right bottom side  -->
                        <avalonDock:LayoutAnchorablePaneGroup DockMinHeight="200">
                            <avalonDock:LayoutAnchorablePane>
                                <avalonDock:LayoutAnchorable
                                    x:Name="ReferencesPanelHost"
                                    Title="References"
                                    ContentId="ReferencesPanelHost"
                                    IsActiveChanged="LayoutAnchorable_IsActiveChanged"
                                    IsSelectedChanged="LayoutAnchorable_IsSelectedChanged">
                                    <local:ReferencesPanel x:Name="ReferencesPanel" />
                                </avalonDock:LayoutAnchorable>

                                <avalonDock:LayoutAnchorable
                                    x:Name="NotesPanelHost"
                                    Title="Notes"
                                    ContentId="Notes"
                                    IsActiveChanged="LayoutAnchorable_IsActiveChanged"
                                    IsSelectedChanged="LayoutAnchorable_IsSelectedChanged">
                                    <local:NotesPanel x:Name="NotesPanel" />
                                </avalonDock:LayoutAnchorable>

                                <avalonDock:LayoutAnchorable
                                    x:Name="SourceFilePanelHost"
                                    Title="Source File"
                                    ContentId="SourceFile"
                                    IsActiveChanged="LayoutAnchorable_IsActiveChanged"
                                    IsSelectedChanged="LayoutAnchorable_IsSelectedChanged">
                                    <local:SourceFilePanel x:Name="SourceFilePanel" />
                                </avalonDock:LayoutAnchorable>

                                <avalonDock:LayoutAnchorable
                                    x:Name="BookmarksPanelHost"
                                    Title="Bookmarks"
                                    ContentId="Bookmarks"
                                    IsActiveChanged="LayoutAnchorable_IsActiveChanged"
                                    IsSelectedChanged="LayoutAnchorable_IsSelectedChanged">
                                    <local:BookmarksPanel x:Name="BookmarksPanel" />
                                </avalonDock:LayoutAnchorable>

                                <avalonDock:LayoutAnchorable
                                    x:Name="SearchPanelHost"
                                    Title="Search Results"
                                    ContentId="SearchResults"
                                    IsActiveChanged="LayoutAnchorable_IsActiveChanged"
                                    IsSelectedChanged="LayoutAnchorable_IsSelectedChanged">
                                    <local:SearchResultsPanel x:Name="SearchPanel" />
                                </avalonDock:LayoutAnchorable>

                                <avalonDock:LayoutAnchorable
                                    Title="Expression"
                                    ContentId="Expression"
                                    IsActiveChanged="LayoutAnchorable_IsActiveChanged"
                                    IsSelectedChanged="LayoutAnchorable_IsSelectedChanged">
                                    <Grid>
                                        <Button Content="Placeholder" />
                                    </Grid>
                                </avalonDock:LayoutAnchorable>
                            </avalonDock:LayoutAnchorablePane>
                        </avalonDock:LayoutAnchorablePaneGroup>
                    </avalonDock:LayoutPanel>

                </avalonDock:LayoutPanel>
            </avalonDock:LayoutRoot>
        </avalonDock:DockingManager>

        <StatusBar
            x:Name="MainStatusBar"
            Grid.Row="2"
            Height="24"
            Background="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}">
            <Image
                Width="14"
                Height="14"
                Source="{StaticResource DocumentIcon}" />
            <StatusBarItem
                x:Name="IRTypeLabel"
                VerticalAlignment="Center"
                Content="UTC IR"
                FontSize="11" />
            <Separator />

            <Image
                Width="14"
                Height="14"
                Source="{StaticResource BlockIcon}" />
            <StatusBarItem
                VerticalAlignment="Center"
                Content="Block"
                FontSize="11" />
            <TextBlock
                x:Name="BlockStatus"
                MinWidth="50"
                MaxWidth="50"
                VerticalAlignment="Center"
                FontSize="11"
                FontWeight="DemiBold"
                Text="2 ($LL4)"
                TextTrimming="CharacterEllipsis" />
            <Separator />

            <Image
                Width="14"
                Height="14"
                Source="{StaticResource BookmarkIcon}" />
            <TextBlock
                VerticalAlignment="Center"
                FontSize="11"
                Text="Bookmark" />
            <TextBlock
                x:Name="BookmarkStatus"
                MinWidth="30"
                MaxWidth="50"
                VerticalAlignment="Center"
                FontSize="11"
                FontWeight="DemiBold"
                Text="2 / 3" />
            <Separator />

            <Image
                Width="14"
                Height="14"
                Source="{StaticResource MonitorIcon}" />
            <TextBlock
                VerticalAlignment="Center"
                FontSize="11"
                Text="Workspace" />
            <ComboBox
                x:Name="WorkspaceCombobox"
                Width="120"
                Height="18"
                Padding="2,0,5,0"
                VerticalAlignment="Center"
                VerticalContentAlignment="Center"
                BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"
                FontSize="11"
                SelectedIndex="0">
                <ComboBoxItem Content="Default" />
                <ComboBoxItem Content="Side-by-Side" />
            </ComboBox>
            <Separator />
            <TextBlock
                VerticalAlignment="Center"
                FontSize="11"
                Text="Theme" />
            <ComboBox
                x:Name="ThemeCombobox"
                Width="80"
                Height="18"
                Padding="2,0,5,0"
                VerticalAlignment="Center"
                VerticalContentAlignment="Center"
                FontSize="11"
                SelectedIndex="1">
                <ComboBox.Resources>
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                    </Style>
                </ComboBox.Resources>
                <ComboBoxItem Content="Light">
                    <ComboBoxItem.Tag>
                        <avalonDock:Vs2013LightTheme />
                    </ComboBoxItem.Tag>
                </ComboBoxItem>
                <ComboBoxItem Content="Dark">
                    <ComboBoxItem.Tag>
                        <avalonDock:Vs2013DarkTheme />
                    </ComboBoxItem.Tag>
                </ComboBoxItem>
                <ComboBoxItem Content="Blue">
                    <ComboBoxItem.Tag>
                        <avalonDock:Vs2013BlueTheme />
                    </ComboBoxItem.Tag>
                </ComboBoxItem>
            </ComboBox>

            <ToggleButton
                x:Name="FullScreenButton"
                VerticalAlignment="Center"
                BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"
                Command="local:AppCommand.FullScreen"
                FontSize="11"
                ToolTip="Enter/exit full screen mode (F11)">
                <StackPanel Orientation="Horizontal">
                    <Image VerticalAlignment="Center" Source="{StaticResource OpenExternalIcon}" />
                    <TextBlock
                        Margin="4,0,0,0"
                        VerticalAlignment="Center"
                        FontSize="11"
                        Text="Full Screen" />
                </StackPanel>
            </ToggleButton>

            <Separator />

            <ToggleButton
                x:Name="DiffModeButton"
                VerticalAlignment="Center"
                Background="#FFF1E99A"
                BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"
                Checked="ToggleButton_Checked"
                FontSize="11"
                ToolTip="Show window on top of all other windows (F12)"
                Unchecked="OnTopButton_Unchecked">
                <StackPanel Orientation="Horizontal">
                    <Image VerticalAlignment="Center" Source="{StaticResource DiffIcon}" />
                    <TextBlock
                        Margin="4,0,0,0"
                        VerticalAlignment="Center"
                        FontSize="11"
                        Text="Diff Mode" />
                </StackPanel>
            </ToggleButton>

            <TextBlock
                x:Name="DiffStatusText"
                VerticalAlignment="Center"
                FontSize="11"
                FontWeight="Bold"
                ToolTip="Number of Added, Deleted, Modified lines" />
            <Separator />

            <TextBlock
                x:Name="OptionalStatusText"
                VerticalAlignment="Center"
                FontSize="11"
                Foreground="DarkRed"
                MouseDown="OptionalStatusText_MouseDown" />


            <Button
                x:Name="UpdateButton"
                VerticalAlignment="Center"
                Background="#FF95FFAF"
                BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"
                Click="UpdateButton_Click"
                FontSize="11"
                ToolTip="Update application to newest version"
                Visibility="Hidden">
                <StackPanel Orientation="Horizontal">
                    <Image VerticalAlignment="Center" Source="{StaticResource ReloadIcon}" />
                    <TextBlock
                        Margin="4,0,0,0"
                        VerticalAlignment="Center"
                        FontSize="11"
                        Text="Update Available" />
                </StackPanel>
            </Button>

        </StatusBar>
    </Grid>
</Window>